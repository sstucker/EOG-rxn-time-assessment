%command script for execution of entire experiment. variables defined here
%will matter! for BE491 F18 EOG rxn time project
%author: sstucker 11/28/18
%
%some global stuff: visual stim figure and visual cue time
global experimentScreen
global bufferCue
global visualPolarity
%gives handles to listener functions
AListener = @AuralListener;
AVListener = @AuralVisualListener;
%--------------------------------------------------------------------------
sampleRate = 500; %IMPORTANT: SEE BELOW
trialDuration = 10; %IMPORTANT: BUFFERS FOR VISUAL STUFF BASED ON 10s TRIAL
auralStimDuration = 0.5;
inputChannel = 'ai0';
outputChannelL = 'ao1';
outputChannelR = 'ao0';
bufferCue = 60;
%--------------------------------------------------------------------------
%EXPERIMENT
nullStim = zeros(trialDuration*sampleRate,2);
A1onset = randi([3,6]);
A2onset = randi([3,6]);
A3onset = randi([3,6]);
V1onset = randi([3,6]);
V2onset = randi([3,6]);
V3onset = randi([3,6]);
AV1onset = randi([3,6]);
AV2onset = randi([3,6]);
AV3onset = randi([3,6]);
polchoices = ['R','L'];
A1polarity = polchoices(randi([1,2]));
A2polarity = polchoices(randi([1,2]));
A3polarity = polchoices(randi([1,2]));
V1polarity = polchoices(randi([1,2]));
V2polarity = polchoices(randi([1,2]));
V3polarity = polchoices(randi([1,2]));
AV1polarity = polchoices(randi([1,2]));
AV2polarity = polchoices(randi([1,2]));
AV3polarity = polchoices(randi([1,2]));
trials = [...
{'A',stimulusGenerator(trialDuration,auralStimDuration,sampleRate,A1onset,A1polarity),A1onset,A1polarity};...         %AURAL 1 [type,stim,onset,polarity}
{'A',stimulusGenerator(trialDuration,auralStimDuration,sampleRate,A2onset,A2polarity),A2onset,A2polarity};...         %AURAL 2
{'A',stimulusGenerator(trialDuration,auralStimDuration,sampleRate,A3onset,A3polarity),A3onset,A3polarity};...         %AURAL 3
{'V',nullStim,V1onset,V1polarity};...                                                                                 %VISUAL 1
{'V',nullStim,V2onset,V2polarity};...                                                                                 %VISUAL 2
{'V',nullStim,V3onset,V3polarity};...                                                                                 %VISUAL 3
{'AV',stimulusGenerator(trialDuration,auralStimDuration,sampleRate,AV1onset,AV1polarity),AV1onset,AV1polarity};...    %AURAL-VISUAL 1
{'AV',stimulusGenerator(trialDuration,auralStimDuration,sampleRate,AV2onset,AV2polarity),AV2onset,AV2polarity};...    %AURAL-VISUAL 2
{'AV',stimulusGenerator(trialDuration,auralStimDuration,sampleRate,AV3onset,AV3polarity),AV3onset,AV3polarity}...     %AURAL-VISUAL 3
];
%[type,aural_stim,time,EOGvoltage,visual_stim]
BigData = cell(9,5);
for i = (4:9)
    trial = trials(i,:);
    if trial{1} == 'A'
        fprintf('RUNNING AN A TRIAL :) ')
        stimsig = trial{2};
        BigData(i,1) = trial{1};
        BigData(i,2) = stimsig; 
        BigData(i,3:5) = {runTrial(inputChannel,outputChannelL,outputChannelR,trialDuration,sampleRate,AListener,stimsig)};
    elseif trial{1} == 'V' || trial{1} == 'AV'
        fprintf('RUNNING AN AV TRIAL :) ')
        stimsig = trial{2};
        visualPolarity = trials{i,4};
        bufferCue = trials{i,3};
        BigData(i,1) = trial{1};
        BigData(i,2) = stimsig;
        BigData(i,1:3) = {runTrial(inputChannel,outputChannelL,outputChannelR,trialDuration,sampleRate,AVListener,stimsig)};
    else
        fprintf('Invalid type argument in trials array!');
    end
end
%--------------------------------------------------------------------------
% 
% experimentScreen = visualCue;
% experimentScreen.init;
% pause(2);
% experimentScreen.hideInstructions;
% [myT,myY,myVisStim] = runTrial('ai0','ao1','ao0',trialDuration,sampleRate,AVListener,stim);

% plot(myT,myY);
% hold on
% plot(myT,stim(:,1));
% plot(myT,stim(:,2));

%listeners down here!
%--------------------------------------------------------------------------

function AuralListener(src,event)
global y;
global t;
y = [y;event.Data(:,1)];
t = [t;event.TimeStamps];
end
function AuralVisualListener(src,event)
global experimentScreen;
global y;
global t;
global visStim;
global bufferNo;
global bufferCue;
global visualPolarity;
VBuffer = zeros(size(event.TimeStamps));
if bufferNo == bufferCue
    if visualPolarity == 'L'
        experimentScreen.leftCue;
    elseif visualPolarity == 'R'
        experimentScreen.rightCue;
    else
        fprintf('visualPolarity is invalid')
    end
    VBuffer(1) = 1;
    visStim = [visStim;VBuffer];
else
    visStim = [visStim;VBuffer];
end
y = [y;event.Data(:,1)];
t = [t;event.TimeStamps];
bufferNo = bufferNo + 1;
end